name: Deploy

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
        inputs:
            version:
                description: 'Version'
                required: true
                default: 'latest'

jobs:
    push_to_registry:
        runs-on: ubuntu-latest
        environment: production
        if: ${{ github.event.workflow_run.conclusion != 'failure' }}
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3
              with:
                ref: ${{github.event.commit_id}}

            - name: Prepare image repository
              run: echo "image_repository_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
            
            - name: Prepare version
              run: |
                echo "TAG_NAME=latest" >> $GITHUB_ENV
                if [ "${{ github.event.release.tag_name }}" != "" ]; then
                  echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
                fi;
                if [ "${{ github.event.inputs.version }}" != "" ]; then
                  echo "TAG_NAME=${{ github.event.inputs.version }}" >> $GITHUB_ENV
                fi;
            
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.DOCKER_TOKEN }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              if: ${{ github.event.inputs.version == '' || github.event.inputs.version == 'latest' }}
              with:
                context: .
                file: Dockerfile
                push: true
                tags: ghcr.io/${{ env.image_repository_name }}:${{ env.TAG_NAME }}